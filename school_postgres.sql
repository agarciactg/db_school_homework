-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.academicgroups
(
    id integer NOT NULL DEFAULT nextval('academicgroups_id_seq'::regclass),
    education_degree_id integer,
    name character varying(255) COLLATE pg_catalog."default",
    school_year integer,
    CONSTRAINT academicgroups_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.educationdegree
(
    id integer NOT NULL DEFAULT nextval('educationdegree_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    code character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT educationdegree_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ratings
(
    id integer NOT NULL DEFAULT nextval('ratings_id_seq'::regclass),
    student_id integer,
    subject_id integer,
    qualification double precision,
    date_qualification date,
    comment text COLLATE pg_catalog."default",
    status boolean,
    CONSTRAINT ratings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id integer NOT NULL DEFAULT nextval('role_id_seq'::regclass),
    name character varying(255) COLLATE pg_catalog."default",
    code character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT role_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.subject
(
    id integer NOT NULL DEFAULT nextval('subject_id_seq'::regclass),
    teacher_id integer,
    code character varying(50) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    credits integer,
    status boolean,
    CONSTRAINT subject_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_academicgroup
(
    user_id integer NOT NULL,
    academic_group_id integer NOT NULL,
    CONSTRAINT user_academicgroup_pkey PRIMARY KEY (user_id, academic_group_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    role_id integer,
    name character varying(255) COLLATE pg_catalog."default",
    last_name character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default",
    password character varying(255) COLLATE pg_catalog."default",
    date_of_birth date,
    email character varying(255) COLLATE pg_catalog."default",
    status boolean,
    academic_group_id integer,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.academicgroups
    ADD CONSTRAINT academicgroups_education_degree_id_fkey FOREIGN KEY (education_degree_id)
    REFERENCES public.educationdegree (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ratings
    ADD CONSTRAINT ratings_student_id_fkey FOREIGN KEY (student_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ratings
    ADD CONSTRAINT ratings_subject_id_fkey FOREIGN KEY (subject_id)
    REFERENCES public.subject (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.subject
    ADD CONSTRAINT subject_teacher_id_fkey FOREIGN KEY (teacher_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_academicgroup
    ADD CONSTRAINT user_academicgroup_academic_group_id_fkey FOREIGN KEY (academic_group_id)
    REFERENCES public.academicgroups (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_academicgroup
    ADD CONSTRAINT user_academicgroup_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_academic_group_id_fkey FOREIGN KEY (academic_group_id)
    REFERENCES public.academicgroups (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;